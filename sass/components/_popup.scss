.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, .8);
  z-index: 2500;
  opacity: 0;
  visibility: hidden;
  transition: all .3s;

  &__content {
    @include centerInContainer;

    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .2);
    border-radius: 3px;
    display: table; //both right and left section of popup are set as table cells to work with the same height and align content better
    overflow: hidden; //hides image corner overflowing border radius of container
    opacity: 0;
    transform: translate(-50%, -50%) scale(.25); //again the translate is necessary because you cannot have 2 transform isntructions and have both properties applied
    transition: all .5s .2s;
  }

  &__left {
    width: 33.333333%;
    display: table-cell;
  }

  &__right {
    width: 66.666667%;
    display: table-cell;
    vertical-align: middle; //poperty of tables
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-2;

    column-count: 2; //feature that allows to divide text in 2 columns
    column-gap: 4rem; //default is 1em = 14px because it takes current element font-size as reference
    column-rule: 1px solid $color-grey-light-2;

    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
  }

  //OPENED POPUP STATES
  &:target { //triggered when anchor tag points to this element and it is clicked. Visible in url with #popup.
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link, 
    &:visited {
      color: $color-grey-dark;
      position: absolute; //parent is popup__right, but it does not have a reference so it will go to its parent popup that has 'position: fixed' and will place taking element as a reference
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all .2s;
      line-height: 1;
    }

    &:hover {
      color: $color-primary;
    }
  }
}